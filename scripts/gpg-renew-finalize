#!/usr/bin/env bash
SCRIPT_ROOT=$( cd `dirname $0`; pwd)
PROJECT_ROOT=${PROJECT_ROOT:-$(cd $SCRIPT_ROOT/..; pwd)}
GNUPGHOME=$PROJECT_ROOT/.gpg


set -euo pipefail


PRIVATE_KEY_NAME=${1?"Missing private key name"}; shift
PRIVATE_KEY=$PRIVATE_KEY_NAME.secretkey.pem
PUBLIC_KEY=$PRIVATE_KEY_NAME.publickey.pem
REVOCATION_CERT=$PRIVATE_KEY_NAME.revocationcert.pem
BACKUP_PRIVATE_KEY=$PRIVATE_KEY_NAME.secretkey-$(date +pre-%Y-%m-%d).pem
BACKUP_PUBLIC_KEY=$PRIVATE_KEY_NAME.publickey-$(date +pre-%Y-%m-%d).pem
BACKUP_REVOCATION_CERT=$PRIVATE_KEY_NAME.revocationcert-$(date +pre-%Y-%m-%d).pem

[[ !  -f $PRIVATE_KEY ]] && echo "$PRIVATE_KEY: Missing" && exit 1


echo "GNUPGHOME=$GNUPGHOME"
echo "Checking GNUPGHOME($GNUPGHOME)"
[ ! -e $GNUPGHOME ] &&  echo "$GNUPGHOME: Not found" && exit 1

KEY_ID=$(cat $PRIVATE_KEY | gpg --list-packets | grep keyid: | head -1 | awk {'print $2'})
[[ -z $KEY_ID ]] && echo "Key ID not found" && exit 1

gpg --keyserver pgp.mit.edu --send-keys $KEY_ID
gpg --keyserver keys.openpgp.org  --send-keys $KEY_ID
gpg --keyserver keys.gnupg.net  --send-keys $KEY_ID
gpg --keyserver keyserver.ubuntu.com --send-keys $KEY_ID

[[ -e $PRIVATE_KEY  ]] && mv $PRIVATE_KEY $BACKUP_PRIVATE_KEY
gpg -a --export-secret-keys $KEY_ID > $PRIVATE_KEY

[[ -e $PUBLIC_KEY  ]] && mv $PUBLIC_KEY $BACKUP_PUBLIC_KEY
gpg -a --export $KEY_ID > $PUBLIC_KEY

[[ -e $REVOCATION_CERT  ]] && mv $REVOCATION_CERT $BACKUP_REVOCATION_CERT
gpg -a --output $REVOCATION_CERT --gen-revoke $KEY_ID


rm -rf $GNUPGHOME

echo ==========================================================================================
echo Private Key            : $PRIVATE_KEY
echo Private Key Backup     : $BACKUP_PRIVATE_KEY
echo Public Key             : $PUBLIC_KEY
echo Public Key Backup      : $BACKUP_PUBLIC_KEY
echo Revocation Cert        : $REVOCATION_CERT
echo Revocation Cert Backup : $BACKUP_REVOCATION_CERT
echo ==========================================================================================
